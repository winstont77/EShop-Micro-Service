name: dockercompose7153522765796049939
services:
  catalog.api:
    build:
      context: C:\Users\WinstonHsu\OneDrive\Desktop\Github\EShopMicroservice\src
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    depends_on:
      catalogdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__Database: Server=catalogdb;Port=5432;Database=CatalogDb;User
        Id=postgres;Password=postgres;Include Error Detail=true
    image: catalogapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      published: "6000"
      protocol: tcp
    - mode: ingress
      target: 8081
      published: "6060"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\WinstonHsu\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\WinstonHsu\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  catalogdb:
    container_name: catalogdb
    environment:
      POSTGRES_DB: CatalogDb
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    image: postgres
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: "5432"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: postgres_catalog
      target: /var/lib/postgresql/data
      volume: {}
networks:
  default:
    name: dockercompose7153522765796049939_default
volumes:
  postgres_catalog:
    name: dockercompose7153522765796049939_postgres_catalog