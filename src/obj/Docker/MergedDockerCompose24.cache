name: dockercompose7153522765796049939
services:
  catalog.api:
    build:
      context: C:\Users\WinstonHsu\OneDrive\Desktop\Github\EShopMicroservice\src
      dockerfile: Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Catalog.API
      target: base
    container_name: Catalog.API
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: catalogapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/bin/Debug/net8.0/Catalog.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    tty: true
    volumes:
    - type: bind
      source: C:\Users\WinstonHsu\OneDrive\Desktop\Github\EShopMicroservice\src\Services\Catalog\Catalog.API
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\WinstonHsu\OneDrive\Desktop\Github\EShopMicroservice\src
      target: /src
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\WinstonHsu\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\WinstonHsu\.nuget\packages\
      target: /.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\WinstonHsu\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\WinstonHsu\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\WinstonHsu\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\WinstonHsu\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net8.0
      target: /HotReloadProxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
      target: /HotReloadAgent
      read_only: true
      bind:
        create_host_path: true
  catalogapi:
    build:
      context: C:\Users\WinstonHsu\OneDrive\Desktop\Github\EShopMicroservice\src
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    container_name: catalogapi
    depends_on:
      catalogdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__CatalogDb: Host=catalogdb;Database=CatalogDb;Username=postgres;Password=postgres
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      published: "8080"
      protocol: tcp
    - mode: ingress
      target: 8081
      published: "8081"
      protocol: tcp
  catalogdb:
    container_name: catalogdb
    environment:
      POSTGRES_DB: CatalogDb
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    image: postgres
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: "5432"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: postgres_catalog
      target: /var/lib/postgresql/data
      volume: {}
networks:
  default:
    name: dockercompose7153522765796049939_default
volumes:
  postgres_catalog:
    name: dockercompose7153522765796049939_postgres_catalog